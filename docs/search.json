[{"path":"https://jabenninghoff.github.io/cards/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cards authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jabenninghoff.github.io/cards/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"Add vignette demonstrating video poker pay tables Add faster hand evaluator using Poker-Hand-Evaluator reticulate Add faster hand evaluator using Poker-Hand-Evaluator Rcpp","code":""},{"path":"https://jabenninghoff.github.io/cards/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Benninghoff. Author, maintainer.","code":""},{"path":"https://jabenninghoff.github.io/cards/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Benninghoff J (2023). cards: Card Simulation Tools. https://jabenninghoff.github.io/cards/, https://github.com/jabenninghoff/cards.","code":"@Manual{,   title = {cards: Card Simulation Tools},   author = {John Benninghoff},   year = {2023},   note = {https://jabenninghoff.github.io/cards/, https://github.com/jabenninghoff/cards}, }"},{"path":[]},{"path":"https://jabenninghoff.github.io/cards/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Card Simulation Tools","text":"Card Simulation Tools: Tools card game simulations, written base R. Feel free use /fork project!","code":""},{"path":"https://jabenninghoff.github.io/cards/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Card Simulation Tools","text":"can install development version cards GitHub : using renv:","code":"# install.packages(\"devtools\") devtools::install_github(\"jabenninghoff/cards\") # install.packages(\"renv\") renv::install(\"jabenninghoff/cards\")"},{"path":"https://jabenninghoff.github.io/cards/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Card Simulation Tools","text":"Changelog: See “Changelog” NEWS.md. Planned: TODO","code":""},{"path":"https://jabenninghoff.github.io/cards/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Card Simulation Tools","text":"cards package supports random draws evaluation poker rank category:","code":"library(cards)  deck <- new_deck() replicate(50, {   hand <- deal_hand(deck)   paste0(print_hand(hand), \": \", eval_hand(hand)) }) #>  [1] \"7S 9H 9C JS KD: one_pair\"     \"4H 5D 5S 9C 10S: one_pair\"    #>  [3] \"4S 7D 8S 10C JD: high_card\"   \"2S 3D 6H JH QS: high_card\"    #>  [5] \"2C 2S 6C 7C QH: one_pair\"     \"3C 6H 10S QD AS: high_card\"   #>  [7] \"4S 9H JH QD KC: high_card\"    \"5C 5D 6C 8S AH: one_pair\"     #>  [9] \"3S 4D 9S 10C JS: high_card\"   \"5H 8D 8C QC KD: one_pair\"     #> [11] \"2D 5D 6C 10S KD: high_card\"   \"3C 6S 8H 10C KH: high_card\"   #> [13] \"2C 2D 3H 10H QS: one_pair\"    \"2H 3S 8C 9D AC: high_card\"    #> [15] \"6D 8H 9D 10D KD: high_card\"   \"2H 4C 5S 6C 9S: high_card\"    #> [17] \"6D 7H 7D 9H JH: one_pair\"     \"7D 9D JH KH KD: jacks_better\" #> [19] \"2D 3S 3D 10H QC: one_pair\"    \"2S 3C 5S 8S 10C: high_card\"   #> [21] \"5S 6H 7H JC JH: jacks_better\" \"3D 9S 10S 10C AC: one_pair\"   #> [23] \"4S 6D 7C 8S QS: high_card\"    \"2C 2D JC JS QD: two_pair\"     #> [25] \"7C 8C QS KC KS: jacks_better\" \"2S 3D 7C 8H AD: high_card\"    #> [27] \"4D 5C 5S 6S 9C: one_pair\"     \"3C 6H 7H QS AS: high_card\"    #> [29] \"2S 5S 5H 7D JC: one_pair\"     \"6C 7C 9H JH QS: high_card\"    #> [31] \"6H 6C 9D JH AS: one_pair\"     \"2D 5C 9H 10S JC: high_card\"   #> [33] \"6C 6S 7D JH JD: two_pair\"     \"7D JD QH QD KD: jacks_better\" #> [35] \"5S 7S 9H QH KD: high_card\"    \"7D 9H 10C 10H AH: one_pair\"   #> [37] \"5D 5S 8H 9S JD: one_pair\"     \"JC JH QD KS AS: jacks_better\" #> [39] \"3C 6C 8H 10D JD: high_card\"   \"3H 4S 8S JD AC: high_card\"    #> [41] \"2D 2S 3C 5H QS: one_pair\"     \"4S 6H JC QS QD: jacks_better\" #> [43] \"2D 4S 6D 8D KH: high_card\"    \"5H 7D 9S 9D JH: one_pair\"     #> [45] \"4S 4D 5H 9S 10S: one_pair\"    \"3S 7H 9C KD KH: jacks_better\" #> [47] \"3H 3D 6D 9C 9H: two_pair\"     \"5D 10D QD KS AS: high_card\"   #> [49] \"2C 3H 6C 8H AC: high_card\"    \"3H 4C 6H 10H QH: high_card\""},{"path":"https://jabenninghoff.github.io/cards/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: Card Simulation Tools — cards-package","title":"cards: Card Simulation Tools — cards-package","text":"Tools card game simulations, written base R.","code":""},{"path":[]},{"path":"https://jabenninghoff.github.io/cards/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: Card Simulation Tools — cards-package","text":"Maintainer: John Benninghoff jbenninghoff@mac.com (ORCID)","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":null,"dir":"Reference","previous_headings":"","what":"Deal a hand of cards — deal_hand","title":"Deal a hand of cards — deal_hand","text":"Return five card hand deck cards, data.frame rank suit.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deal a hand of cards — deal_hand","text":"","code":"deal_hand(d)"},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deal a hand of cards — deal_hand","text":"d deck created new_deck().","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deal a hand of cards — deal_hand","text":"data.frame containing 5 random cards.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deal a hand of cards — deal_hand","text":"Uses sample() select 5 random cards.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/deal_hand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deal a hand of cards — deal_hand","text":"","code":"deck <- new_deck() deal_hand(deck) #>    rank suit #> 49    J    S #> 27    2    H #> 4     5    C #> 3     4    C #> 37    Q    H"},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a poker hand — eval_hand","title":"Evaluate a poker hand — eval_hand","text":"Evaluate rank category five card poker hand.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a poker hand — eval_hand","text":"","code":"eval_hand(h)"},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a poker hand — eval_hand","text":"h data.frame 5 cards.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a poker hand — eval_hand","text":"string hand rank","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate a poker hand — eval_hand","text":"Uses order() rle() identify flushes, straights, pairs, three, four kind.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/eval_hand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a poker hand — eval_hand","text":"","code":"deck <- new_deck() (hand <- deal_hand(deck)) #>    rank suit #> 20    8    D #> 13    A    C #> 25    K    D #> 41    3    S #> 18    6    D eval_hand(hand) #> [1] \"high_card\""},{"path":"https://jabenninghoff.github.io/cards/reference/new_deck.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a deck of cards — new_deck","title":"Create a deck of cards — new_deck","text":"Return standard deck 52 playing cards, data.frame rank suit.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/new_deck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a deck of cards — new_deck","text":"","code":"new_deck()"},{"path":"https://jabenninghoff.github.io/cards/reference/new_deck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a deck of cards — new_deck","text":"data.frame containing deck 52 cards","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/new_deck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a deck of cards — new_deck","text":"Uses expand.grid() creates data.frame factors combining ranks suits.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/new_deck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a deck of cards — new_deck","text":"","code":"new_deck() #>    rank suit #> 1     2    C #> 2     3    C #> 3     4    C #> 4     5    C #> 5     6    C #> 6     7    C #> 7     8    C #> 8     9    C #> 9    10    C #> 10    J    C #> 11    Q    C #> 12    K    C #> 13    A    C #> 14    2    D #> 15    3    D #> 16    4    D #> 17    5    D #> 18    6    D #> 19    7    D #> 20    8    D #> 21    9    D #> 22   10    D #> 23    J    D #> 24    Q    D #> 25    K    D #> 26    A    D #> 27    2    H #> 28    3    H #> 29    4    H #> 30    5    H #> 31    6    H #> 32    7    H #> 33    8    H #> 34    9    H #> 35   10    H #> 36    J    H #> 37    Q    H #> 38    K    H #> 39    A    H #> 40    2    S #> 41    3    S #> 42    4    S #> 43    5    S #> 44    6    S #> 45    7    S #> 46    8    S #> 47    9    S #> 48   10    S #> 49    J    S #> 50    Q    S #> 51    K    S #> 52    A    S"},{"path":"https://jabenninghoff.github.io/cards/reference/print_hand.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a hand of cards — print_hand","title":"Print a hand of cards — print_hand","text":"Returns character vector sorted cards, collapsed default.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/print_hand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a hand of cards — print_hand","text":"","code":"print_hand(h, collapse = TRUE)"},{"path":"https://jabenninghoff.github.io/cards/reference/print_hand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a hand of cards — print_hand","text":"h data.frame 5 cards. collapse TRUE, collapse character vector.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/print_hand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a hand of cards — print_hand","text":"character vector sorted cards.","code":""},{"path":"https://jabenninghoff.github.io/cards/reference/print_hand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a hand of cards — print_hand","text":"","code":"deck <- new_deck() (hand <- deal_hand(deck)) #>    rank suit #> 5     6    C #> 27    2    H #> 3     4    C #> 42    4    S #> 44    6    S print_hand(hand) #> [1] \"2H 4C 4S 6C 6S\""},{"path":"https://jabenninghoff.github.io/cards/news/index.html","id":"cards-013","dir":"Changelog","previous_headings":"","what":"cards 0.1.3","title":"cards 0.1.3","text":"Maintenance update","code":""},{"path":"https://jabenninghoff.github.io/cards/news/index.html","id":"cards-012","dir":"Changelog","previous_headings":"","what":"cards 0.1.2","title":"cards 0.1.2","text":"Maintenance update","code":""},{"path":"https://jabenninghoff.github.io/cards/news/index.html","id":"cards-011","dir":"Changelog","previous_headings":"","what":"cards 0.1.1","title":"cards 0.1.1","text":"Added notebook test performance using bench::mark()","code":""},{"path":"https://jabenninghoff.github.io/cards/news/index.html","id":"cards-010","dir":"Changelog","previous_headings":"","what":"cards 0.1.0","title":"cards 0.1.0","text":"Initial release. Includes basic functions poker simulation: new_deck(): returns deck 52 cards data.frame deal_hand(): selects 5 random cards deck print_hand(): return character vector sorted cards, collapsed default eval_hand(): evaluate hand rank category five card hand","code":""}]
